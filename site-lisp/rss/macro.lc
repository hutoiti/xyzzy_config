(require "rss/defs")
(provide "rss/macro")
(lisp::in-package-1 "rss")
(system:*fset 'rss-value '(macro (key list) (block rss-value (list 'cdr (list* 'assoc key list '(:test #'equal))))))
(system:*fset 'rss-title '(macro (list) (block rss-title (list 'rss-value '"title" list))))
(system:*fset 'rss-link '(macro (list) (block rss-link (list 'rss-value '"link" list))))
(system:*fset 'rss-description '(macro (list) (block rss-description (list 'rss-value '"description" list))))
(system:*fset 'rss-siteurl '(macro (list) (block rss-siteurl (list 'rss-value '"url" list))))
(system:*fset 'rss-id '(macro (list) (block rss-id (list 'rss-value '"id" list))))
(system:*fset 'rss-date '(macro (list) (block rss-date (list 'rss-value '"date" list))))
(system:*fset 'rss-timestamp '(macro (list) (block rss-timestamp (list 'rss-value '"timestamp" list))))
(system:*fset 'rss-item-number-all '(macro (list) (block rss-item-number-all (list 'rss-value '"item-number-all" list))))
(system:*fset 'rss-item-number-unread '(macro (list) (block rss-item-number-unread (list 'rss-value '"item-number-unread" list))))
(system:*fset 'rss-item-site '(macro (list) (block rss-item-site (list 'rss-value '"site" list))))
(system:*fset 'rss-group-name '(macro (group) (block rss-group-name (list 'car group))))
(system:*fset 'rss-group-number-all '(macro (group) (block rss-group-number-all (list 'cadr group))))
(system:*fset 'rss-group-number-unread '(macro (group) (block rss-group-number-unread (list 'caddr group))))
